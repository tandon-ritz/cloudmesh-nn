swagger: "2.0"
info: 
  version: "0.0.1"
  title: "project demo"
  description: "A simple service to get data from a cloud storage service"
  termsOfService: "http://swagger.io/terms/"
  contact: 
    name: "Cloudmesh REST Service Example with AI"
  license: 
    name: "Apache"
host: "localhost:8080"
basePath: "/project19"
schemes: 
  - "http"
consumes: 
  - "application/json"
produces: 
  - "application/json"
paths: 
  /data/output/<output>:
    get:
      tags:
        - DATA
      operationId: cloudmesh.nn.service.data.download
      description: "Downloads data from url"
      produces: 
        - "application/json"
      responses: 
        "200":
          description: "Data info"
          schema: {}

  /data/player: 
    put:
      tags:
        - DATA
      operationId: cloudmesh.nn.service.data.player
      summary: "This API endpoint add player details"
      description: "This API endpoint add player details"
      parameters:
        - name: Player
          in: query
          description: player name passed in query string
          type: string
          required: True
        - name: Pos
          in: query
          description: Pos passed in query string
          type: string
          required: True
        - name: Ht
          in: query
          description: Ht passed in query string
          type: string
          required: True
        - name: Wt
          in: query
          description: Wt passed in query string
          type: string
          required: True
        - name: Forty
          in: query
          description: Forty passed in query string
          type: string
          required: True
        - name: Vertical
          in: query
          description: Vertical passed in query string
          type: string
          required: True
        - name: BenchReps
          in: query
          description: BenchReps passed in query string
          type: string
          required: True
        - name: BroadJump
          in: query
          description: BroadJump passed in query string
          type: string
          required: True
        - name: Cone
          in: query
          description: Cone passed in query string
          type: string
          required: True
        - name: Shuttle
          in: query
          description: Shuttle passed in query string
          type: string
          required: True
        - name: Year
          in: query
          description: Year passed in query string
          type: string
          required: True
        - name: Pfr_ID
          in: query
          description: Pfr_ID passed in query string
          type: string
          required: True
        - name: AV
          in: query
          description: AV passed in query string
          type: string
          required: True
        - name: Team
          in: query
          description: Team passed in query string
          type: string
          required: True
        - name: Round
          in: query
          description: Round passed in query string
          type: string
          required: True
        - name: Pick
          in: query
          description: Pick passed in query string
          type: string
          required: True
      responses:
        200:
          description: Successfully added player details
          schema: {}


  /selection/<filename>/player_selection/<player_selection>:
    get:
      tags:
        - PARTITION
      operationId: cloudmesh.nn.service.partition.selection
      description: "Split up downloaded data"
      produces: 
        - "application/json"
      responses: 
        "200":
          description: "Split data into test and train sets"
          schema: {}

  /data/boxplot/raw/<filename>:
    get:
      tags:
        - TRAIN
      operationId: cloudmesh.nn.service.data.create_boxplot
      description: "creat boxplot with raw data"
      produces: 
        - "application/png"
      responses: 
        "200":
          description: "train data"
          schema: {}

  /data/boxplot/norm/<filename>:
    get:
      tags:
        - TRAIN
      operationId: cloudmesh.nn.service.data.create_boxplotNorm
      description: "creat boxplot with normalized data"
      produces: 
        - "application/png"
      responses: 
        "200":
          description: "train data"
          schema: {}

  /experiment/knn/<filename>:
    get:
      tags:
        - SVM
      operationId: cloudmesh.nn.service.partition.nfl_knn
      description: "knn on the nfl data set"
      produces: 
        - "application/json"
      responses: 
        "200":
          description: "perform knn"
          schema: {}

  /experiment/knn/results/boxplot/<filename>:
    get:
      tags:
        - SVM
      operationId: cloudmesh.nn.service.partition.nfl_knn_results_boxplot
      description: "knn on the nfl data set"
      produces: 
        - "application/png"
      responses: 
        "200":
          description: "perform knn"
          schema: {} 


